apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "net.oneread.oneread"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    //    signingConfigs {
//        // You must set up an environment var before release signing
//        // Run: export APP_KEY={password}
//        // TODO Add your release keystore in /keystore folder
//        release {
//            storeFile file('keystore/release.keystore')
//            keyAlias 'alias'
//            storePassword "$System.env.APP_KEY"
//            keyPassword "$System.env.APP_KEY"
//        }
//
//        debug {
//            storeFile file('keystore/debug.keystore')
//            keyAlias 'androiddebugkey'
//            storePassword 'android'
//            keyPassword 'android'
//        }
//    }

    flavorDimensions "default"

    productFlavors {

        finalProduct {
            dimension "default"
            applicationId "net.oneread.oneread"
            resValue "string", "app_name", "OneRead"
        }

        demoProduct {
            dimension "default"
            applicationId "net.oneread.oneread.demo"
            resValue "string", "app_name", "OneRead Demo"
        }

        demoTesting {
            dimension "default"
            applicationId "net.oneread.oneread.demotesting"
            resValue "string", "app_name", "OneRead Demo Testing"
        }

        mock {
            dimension "default"
            applicationId "net.oneread.oneread.mock"
            resValue "string", "app_name", "OneRead Mock"
        }

        api21 {
            dimension "default"
            applicationId "net.oneread.oneread"
            minSdkVersion 21
            resValue "string", "app_name", "OneRead Api21"
        }
    }

    buildTypes {
        release {
//            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            versionNameSuffix " Debug"
            debuggable true
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'

        // Common Test Dir
        def commonTestDir = 'src/commonTest/kotlin'
        test {
            java.srcDir commonTestDir
        }
        androidTest {
            java.srcDir commonTestDir
        }
    }

    lintOptions {
        warning 'InvalidPackage'
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }

}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

configurations.all {
    resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.1'
}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '26.+'
    final DAGGER_VERSION = '2.8'
    final BUTTERKNIFE_VERSION = '8.5.1'
    final LEAKCANARY_VERSION = '1.5'
    final RETROFIT_VERSION = '2.2.0'
    final HAMCREST_VERSION = '1.3'
    final MOCKITO_VERSION = '2.6.2'
    final RXJAVA_VERSION = '2.0.1'

    final ESPRESSO_VERSION = '2.2.1'
    final RUNNER_VERSION = '0.4'
    final android_state_version = '1.1.0'


    def daggerCompiler = "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    def jUnit = "junit:junit:4.12"
    def mockito = "org.mockito:mockito-core:$MOCKITO_VERSION"
    def mockitoKotlin = "com.nhaarman:mockito-kotlin:1.1.0"

    // App Dependencies
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"

    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    kapt daggerCompiler


    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    kapt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$LEAKCANARY_VERSION"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LEAKCANARY_VERSION"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LEAKCANARY_VERSION"

    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava2:$RETROFIT_VERSION"

    compile "io.reactivex.rxjava2:rxandroid:$RXJAVA_VERSION"
    compile "io.reactivex.rxjava2:rxjava:$RXJAVA_VERSION"

    // Unit tests dependencies
    testCompile jUnit
    testCompile mockito
    testCompile(mockitoKotlin) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    testCompile "org.hamcrest:hamcrest-core:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-library:$HAMCREST_VERSION"
    testCompile "org.hamcrest:hamcrest-integration:$HAMCREST_VERSION"

    // Instrumentation test dependencies
    androidTestCompile jUnit
    androidTestCompile mockito
    androidTestCompile "org.mockito:mockito-android:$MOCKITO_VERSION"
    androidTestCompile(mockitoKotlin) {
        exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib'
    }
    androidTestCompile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$ESPRESSO_VERSION") {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
    }
    androidTestCompile "com.android.support.test.espresso:espresso-core:$ESPRESSO_VERSION"
    androidTestCompile "com.android.support.test:runner:$RUNNER_VERSION"
    androidTestCompile "com.android.support.test:rules:$RUNNER_VERSION"


    kapt "com.evernote:android-state-processor:$android_state_version"
    compile "com.evernote:android-state:$android_state_version"

    compile 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.0.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    compile 'org.jetbrains.anko:anko:0.10.1'
    compile 'com.jakewharton.timber:timber:4.4.0'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'
    compile 'io.reactivex:rxkotlin:1.0.0'
    compile 'com.squareup.sqlbrite:sqlbrite:1.0.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'
    compile 'com.tubb.smrv:swipemenu-recyclerview:5.4.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.bluelinelabs:conductor-support:2.1.4'
    compile 'com.bluelinelabs:conductor-rxlifecycle2:2.1.4'
    compile 'com.bluelinelabs:conductor-autodispose:2.1.4'
    testCompile 'org.robolectric:robolectric:3.1.4'
    provided 'org.glassfish:javax.annotation:10.0-b28'
}

kapt {
    generateStubs = true
}

// Log out test results to console
tasks.matching { it instanceof Test }.all {
    testLogging.events = ["failed", "passed", "skipped"]
}

